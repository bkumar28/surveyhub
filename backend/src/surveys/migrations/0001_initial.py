# Generated by Django 5.2.3 on 2025-07-17 16:26

import uuid

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.TextField()),
                ("description", models.TextField(blank=True)),
                (
                    "field_type",
                    models.CharField(
                        choices=[
                            ("T", "Text"),
                            ("TA", "Textarea"),
                            ("N", "Number"),
                            ("E", "Email"),
                            ("SC", "Single Choice"),
                            ("MC", "Multiple Choice"),
                            ("R", "Rating"),
                            ("S", "Scale"),
                            ("D", "Date"),
                            ("DT", "DateTime"),
                            ("B", "Boolean"),
                            ("F", "File Upload"),
                            ("URL", "URL"),
                            ("PH", "Phone"),
                            ("MAT", "Matrix"),
                        ],
                        max_length=5,
                    ),
                ),
                ("is_required", models.BooleanField(default=False)),
                ("order", models.PositiveIntegerField(default=0)),
                ("condition_value", models.TextField(blank=True)),
                (
                    "condition_operator",
                    models.CharField(
                        blank=True,
                        help_text="Operator for conditional logic (e.g., equals, contains)",
                        max_length=20,
                    ),
                ),
                ("min_length", models.IntegerField(blank=True, null=True)),
                ("max_length", models.IntegerField(blank=True, null=True)),
                (
                    "min_value",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "max_value",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "regex_pattern",
                    models.CharField(
                        blank=True,
                        help_text="Optional regex to validate input",
                        max_length=200,
                    ),
                ),
                (
                    "scale_min",
                    models.IntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "scale_max",
                    models.IntegerField(
                        default=5,
                        validators=[django.core.validators.MaxValueValidator(5)],
                    ),
                ),
                (
                    "scale_labels",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="E.g., {1: 'Poor', 5: 'Excellent'}",
                    ),
                ),
                (
                    "options",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of choices for MCQ/SCQ fields",
                    ),
                ),
                ("allow_other", models.BooleanField(default=False)),
                (
                    "matrix_rows",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of row labels for matrix",
                    ),
                ),
                (
                    "matrix_columns",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of column labels for matrix",
                    ),
                ),
                ("placeholder_text", models.CharField(blank=True, max_length=255)),
                ("help_text", models.TextField(blank=True)),
                ("validation_regex", models.CharField(blank=True, max_length=255)),
                ("error_message", models.CharField(blank=True, max_length=255)),
                (
                    "depends_on",
                    models.ForeignKey(
                        blank=True,
                        help_text="Optional parent question this one depends on",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="surveys.question",
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="QuestionOption",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("text", models.CharField(max_length=255)),
                ("value", models.CharField(max_length=100)),
                ("order", models.PositiveIntegerField(default=0)),
                ("is_other", models.BooleanField(default=False)),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="question_options",
                        to="surveys.question",
                    ),
                ),
            ],
            options={
                "ordering": ["order", "id"],
            },
        ),
        migrations.CreateModel(
            name="Survey",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("start_date", models.DateTimeField(default=django.utils.timezone.now)),
                ("end_date", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("D", "Draft"),
                            ("A", "Active"),
                            ("P", "Paused"),
                            ("C", "Completed"),
                            ("E", "Expired"),
                        ],
                        default="D",
                        max_length=1,
                    ),
                ),
                (
                    "visibility",
                    models.CharField(
                        choices=[
                            ("PU", "Public"),
                            ("PR", "Private"),
                            ("IN", "Invite Only"),
                        ],
                        default="PU",
                        max_length=2,
                    ),
                ),
                ("is_anonymous", models.BooleanField(default=True)),
                ("is_public", models.BooleanField(default=False)),
                ("max_responses", models.IntegerField(blank=True, null=True)),
                ("requires_login", models.BooleanField(default=False)),
                ("allow_multiple_responses", models.BooleanField(default=False)),
                ("show_progress_bar", models.BooleanField(default=True)),
                (
                    "thank_you_message",
                    models.TextField(default="Thank you for your response!"),
                ),
                ("theme_color", models.CharField(default="#007bff", max_length=7)),
                (
                    "logo",
                    models.ImageField(blank=True, null=True, upload_to="survey_logos/"),
                ),
                ("custom_css", models.TextField(blank=True)),
                ("response_count", models.IntegerField(default=0)),
                ("completion_rate", models.FloatField(default=0.0)),
                ("average_time", models.DurationField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="surveys_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="surveys_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="question",
            name="survey",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="questions",
                to="surveys.survey",
            ),
        ),
        migrations.CreateModel(
            name="SurveyResponse",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("session_key", models.CharField(blank=True, max_length=40)),
                ("user_token", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("referrer", models.URLField(blank=True)),
                ("started_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("time_taken", models.DurationField(blank=True, null=True)),
                ("is_complete", models.BooleanField(default=False)),
                ("is_test", models.BooleanField(default=False)),
                ("country", models.CharField(blank=True, max_length=100)),
                ("city", models.CharField(blank=True, max_length=100)),
                (
                    "survey",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="responses",
                        to="surveys.survey",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Answer",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("text_answer", models.TextField(blank=True)),
                ("number_answer", models.FloatField(blank=True, null=True)),
                ("date_answer", models.DateField(blank=True, null=True)),
                ("datetime_answer", models.DateTimeField(blank=True, null=True)),
                (
                    "file_answer",
                    models.FileField(blank=True, null=True, upload_to="survey_files/"),
                ),
                ("json_answer", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="surveys.question",
                    ),
                ),
                (
                    "response",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="answers",
                        to="surveys.surveyresponse",
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="survey",
            index=models.Index(
                fields=["status", "created_at"], name="surveys_sur_status_b58e49_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="survey",
            index=models.Index(
                fields=["created_by", "status"], name="surveys_sur_created_4017e9_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="question",
            unique_together={("survey", "order")},
        ),
        migrations.AddIndex(
            model_name="surveyresponse",
            index=models.Index(
                fields=["survey", "is_complete"], name="surveys_sur_survey__ff1807_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="surveyresponse",
            index=models.Index(
                fields=["completed_at"], name="surveys_sur_complet_bc6b29_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="surveyresponse",
            unique_together={("survey", "user_token")},
        ),
        migrations.AddIndex(
            model_name="answer",
            index=models.Index(
                fields=["question", "created_at"], name="surveys_ans_questio_e6f14f_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="answer",
            unique_together={("response", "question")},
        ),
        migrations.AlterModelOptions(
            name="surveyresponse",
            options={"ordering": ["-started_at", "id"]},
        ),
    ]
