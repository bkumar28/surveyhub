services:
  backend:
    build: .
    command: sh /app/docker_entrypoint.sh
    volumes:
      - ./src:/app/src
      - ./pyproject.toml:/app/pyproject.toml
      - ./poetry.lock:/app/poetry.lock
      - ./scripts/${START_SCRIPT:-start-dev}.sh:/app/docker_entrypoint.sh
      - ../sample_data:/app/sample_data
      - static_volume:/vol/web/static

    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis

  celery:
    build: .
    command: poetry run celery -A src.celery_app worker --loglevel=info
    volumes:
      - ./src:/app/src
      - ./pyproject.toml:/app/pyproject.toml
      - ./poetry.lock:/app/poetry.lock
    env_file:
      - .env
    depends_on:
      - backend
      - redis

  celery-beat:
    build: .
    command: poetry run celery -A src.celery_app beat --loglevel=info
    volumes:
      - ./src:/app/src
      - ./pyproject.toml:/app/pyproject.toml
      - ./poetry.lock:/app/poetry.lock
    env_file:
      - .env
    depends_on:
      - backend
      - redis


  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${DB_NAME:-db_test}
      POSTGRES_USER: ${DB_USER:-db_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-db_user}


  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - static_volume:/vol/web/static
      - ./nginx:/etc/nginx/conf.d
    depends_on:
      - backend

volumes:
  postgres_data:
  static_volume:

networks:
  default:
    name: surveyhub-network
