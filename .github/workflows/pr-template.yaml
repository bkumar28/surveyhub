name: PR Template Validation and Auto-Apply

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  validate-pr-template:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check PR Template Compliance
        id: template-check
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            const prBody = pr.body || '';
            const prBodyNormalized = prBody.toLowerCase();

            const requiredSections = [
              'developer:',
              'summary of proposed changes',
              'type of change',
              'testing'
            ];

            const missingSections = requiredSections.filter(section =>
              !prBodyNormalized.includes(section)
            );

            if (missingSections.length > 0) {
              core.setFailed(`PR is missing required template sections: ${missingSections.join(', ')}`);

              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `**PR Template Incomplete**\n\nThis pull request is missing the following required sections:\n${missingSections.map(s => `- ${s}`).join('\n')}\n\nPlease update your PR description to include all required sections from the template.`
              });
            } else {
              core.info('PR template compliance check passed');
            }

  auto-apply-template:
    runs-on: ubuntu-latest
    if: github.event.action == 'opened' && github.event.pull_request.body == ''

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Apply PR Template
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const templatePath = '.github/pull_request_template.md';
            let template = '';

            try {
              template = fs.readFileSync(templatePath, 'utf8');
            } catch (error) {
              template = [
                "- **Developer:** *@MISSING_NAME*",
                "",
                "# Summary of Proposed Changes",
                "*Anything not already covered in the commit messages could be mentioned here*",
                "",
                "# Type of Change",
                "Please delete options that are not relevant.",
                "- [ ] Bug fix (non-breaking change which fixes an issue)",
                "- [ ] New feature (non-breaking change which adds functionality)",
                "- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)",
                "- [ ] Documentation update",
                "- [ ] Code refactoring",
                "- [ ] Performance improvement",
                "- [ ] Other (please describe):",
                "",
                "# Special Instructions or Notes",
                "*Are changes made to high-risk areas? Anything reviewers should know about this PR?*",
                "",
                "# Migration Notes",
                "*If this is a breaking change, please describe the migration path for existing users.*",
                "",
                "# Testing",
                "Please describe the tests that you ran to verify your changes.",
                "- [ ] I have performed a self-review of my own code",
                "- [ ] I have commented my code, particularly in hard-to-understand areas",
                "- [ ] I have made corresponding changes to the documentation",
                "- [ ] My changes generate no new warnings",
                "- [ ] I have added tests that prove my fix is effective or that my feature works",
                "- [ ] New and existing unit tests pass locally with my changes",
                "- [ ] Any dependent changes have been merged and published in downstream modules",
                "",
                "# Screenshots (if applicable)",
                "*Add screenshots to help explain your changes.*",
                "",
                "# Developer reminders:",
                "*Review branch for leftover comments and extraneous code*",
                "*Request review from your development partner*",
                "",
                "# Reviewer reminders:",
                "*After you approve the pull request (\"Review changes\" -> \"Approve\"), let the developer know it is ready*"
              ].join('\n');
            }

            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              body: template
            });
