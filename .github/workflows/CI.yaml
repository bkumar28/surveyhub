name: CI
on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment to deploy to (development, testing, staging, production)'
        required: true
        type: string
  push:
    branches:
      - main
      - develop
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - edited

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:
  ci-setup:
    name: CI Setup
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || (github.event_name == 'pull_request' && 'development') || 'testing' }}
    outputs:
      PYTHON_VERSION: ${{ steps.setup-vars.outputs.PYTHON_VERSION }}
      DEBUG: ${{ steps.setup-vars.outputs.DEBUG }}
      CONTAINER_INIT_SCRIPT: ${{ steps.setup-vars.outputs.CONTAINER_INIT_SCRIPT }}
      ENVIRONMENT: ${{ steps.setup-vars.outputs.ENVIRONMENT }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup variables
        id: setup-vars
        env:
          # Environment-specific variables (these come from GitHub environment settings)
          ENV_PYTHON_VERSION: ${{ vars.PYTHON_VERSION }}
          ENV_DEBUG: ${{ vars.DEBUG }}
          ENV_CONTAINER_INIT_SCRIPT: ${{ vars.CONTAINER_INIT_SCRIPT }}
        run: |
          # Determine environment
          if [ "${{ inputs.environment }}" != "" ]; then
            ENVIRONMENT="${{ inputs.environment }}"
          elif [ "${{ github.event_name }}" == "pull_request" ]; then
            ENVIRONMENT="development"
          else
            ENVIRONMENT="testing"
          fi

          # Set outputs
          echo "ENVIRONMENT=${ENVIRONMENT}" >> $GITHUB_OUTPUT
          echo "PYTHON_VERSION=${{ inputs.python-version || env.ENV_PYTHON_VERSION}}" >> $GITHUB_OUTPUT
          echo "DEBUG=${{ inputs.debug || env.ENV_DEBUG  }}" >> $GITHUB_OUTPUT
          echo "CONTAINER_INIT_SCRIPT=${{ inputs.container-init-script || env.ENV_CONTAINER_INIT_SCRIPT }}" >> $GITHUB_OUTPUT

  actionlint:
    needs: ci-setup
    name: Lint GitHub Actions
    uses: ./.github/workflows/actionlint.yaml

  code-quality:
    needs: ci-setup
    name: Code Quality Checks
    uses: ./.github/workflows/code-quality.yaml
    with:
      python-version: ${{ needs.ci-setup.outputs.PYTHON_VERSION }}

  codecov-validation:
    name: Codecov Validation
    needs: ci-setup
    uses: ./.github/workflows/codecov-validation.yaml

  check-migrations:
    needs: ci-setup
    name: Check Migrations
    uses: ./.github/workflows/migrations.yaml
    with:
      python-version: ${{ needs.ci-setup.outputs.PYTHON_VERSION }}
      debug: ${{ needs.ci-setup.outputs.DEBUG }}
      container-init-script: ${{ needs.ci-setup.outputs.CONTAINER_INIT_SCRIPT }}

  pra-backend:
    needs: ci-setup
    name: Backend Tests
    uses: ./.github/workflows/pra-backend.yaml
    with:
      python-version: ${{ needs.ci-setup.outputs.PYTHON_VERSION }}
      debug: ${{ needs.ci-setup.outputs.DEBUG }}
      container-init-script: ${{ needs.ci-setup.outputs.CONTAINER_INIT_SCRIPT }}
    secrets: inherit
